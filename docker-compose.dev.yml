services:
  # PostgreSQL Database for Development
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: scpi_simulator
      POSTGRES_USER: scpi_user
      POSTGRES_PASSWORD: scpi_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scpi_user -d scpi_simulator"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alderan-dev-network

  # Redis Cache for Development
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alderan-dev-network

  # Backend Development (with hot reload)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    restart: unless-stopped
    environment:
      # Application settings
      PROJECT_NAME: "SCPI Simulator API - Dev"
      VERSION: "1.0.0-dev"
      API_V1_STR: "/api/v1"
      ENVIRONMENT: "development"
      
      # Server settings
      HOST: "0.0.0.0"
      PORT: 8000
      RELOAD: true
      
      # Database settings
      DATABASE_URL: "postgresql://scpi_user:scpi_password@db:5432/scpi_simulator"
      DATABASE_HOST: "db"
      DATABASE_PORT: 5432
      DATABASE_NAME: "scpi_simulator"
      DATABASE_USER: "scpi_user"
      DATABASE_PASSWORD: "scpi_password"
      
      # Redis settings
      REDIS_URL: "redis://redis:6379/0"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_DB: 0
      
      # Security settings (relaxed for development)
      SECRET_KEY: "development-secret-key-not-for-production"
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
      ALGORITHM: "HS256"
      
      # CORS settings (permissive for development)
      BACKEND_CORS_ORIGINS: "http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173"
      
      # Logging
      LOG_LEVEL: "DEBUG"
      LOG_FORMAT: "console"
      
      # Rate limiting (disabled for development)
      RATE_LIMIT_ENABLED: false
    volumes:
      - ./backend:/app:rw
      - backend_dev_uploads:/app/uploads
      - backend_dev_logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - alderan-dev-network

  # Frontend Development (with hot reload)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    restart: unless-stopped
    environment:
      # Development environment
      NODE_ENV: "development"
      VITE_API_BASE_URL: "http://localhost:8000/api/v1"
      VITE_APP_NAME: "Simulateur SCPI Alderan - Dev"
      VITE_APP_VERSION: "1.0.0-dev"
      VITE_ENVIRONMENT: "development"
      VITE_ENABLE_DEV_TOOLS: "true"
      VITE_ENABLE_ANALYTICS: "false"
      VITE_DEBUG_MODE: "true"
      VITE_SHOW_API_LOGS: "true"
    volumes:
      - ./frontend:/app:rw
      - /app/node_modules
      - /app/dist
    ports:
      - "5173:5173"
      - "4173:4173"  # Preview port
    depends_on:
      - backend-dev
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    networks:
      - alderan-dev-network

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: db
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - alderan-dev-network

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379"
      HTTP_USER: "admin"
      HTTP_PASSWORD: "admin"
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - alderan-dev-network

  # MailHog (Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - alderan-dev-network

  # Development Test Database
  test-db:
    image: postgres:15-alpine
    restart: "no"
    environment:
      POSTGRES_DB: test_scpi_simulator
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_scpi_simulator"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alderan-dev-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  backend_dev_uploads:
    driver: local
  backend_dev_logs:
    driver: local

networks:
  alderan-dev-network:
    driver: bridge
