[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alderan-scpi-simulator"
dynamic = ["version"]
description = "SCPI Investment Simulator for Alderan"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = ["scpi", "investment", "simulator", "fastapi", "react"]
authors = [
  { name = "Alderan Team" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "fastapi>=0.115.0",
  "uvicorn[standard]>=0.32.0",
  "pydantic>=2.10.0",
  "pydantic-settings>=2.7.0",
  "sqlalchemy>=2.0.36",
  "alembic>=1.14.0",
  "asyncpg>=0.30.0",
  "psycopg2-binary>=2.9.9",
  "redis>=5.2.0",
  "python-multipart>=0.0.12",
  "python-jose[cryptography]>=3.3.0",
  "passlib[bcrypt]>=1.7.4",
  "pytest>=8.3.0",
  "pytest-asyncio>=0.24.0",
  "httpx>=0.28.0",
  "coverage>=7.6.0",
  "bandit>=1.7.5",
  "safety>=3.0.0",
]

[project.urls]
Documentation = "https://github.com/alderan/scpi-simulator#readme"
Issues = "https://github.com/alderan/scpi-simulator/issues"
Source = "https://github.com/alderan/scpi-simulator"

[tool.hatch.version]
path = "backend/app/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "pre-commit",
  "ruff",
  "mypy",
  "black",
  "isort",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]
lint = [
  "ruff check .",
  "black --check .",
  "isort --check-only .",
  "mypy .",
]
format = [
  "black .",
  "isort .",
  "ruff check --fix .",
]

[tool.coverage.run]
source_pkgs = ["backend", "tests"]
branch = true
parallel = true
omit = [
  "backend/app/__about__.py",
]

[tool.coverage.paths]
alderan_scpi_simulator = ["backend", "*/alderan-scpi-simulator/backend"]
tests = ["tests", "*/alderan-scpi-simulator/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py311"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["backend"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.black]
target-version = ["py311"]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
